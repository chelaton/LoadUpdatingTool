// <auto-generated />
using System;
using LoadUpdatingTool.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoadUpdatingTool.Migrations
{
    [DbContext(typeof(LoadContext))]
    [Migration("20211211120150_triTabulky")]
    partial class triTabulky
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoadUpdatingTool.Data.Entity.SysLoadInformationEvw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CurveNumber")
                        .HasColumnType("int")
                        .HasColumnName("CURVE_NUMBER");

                    b.Property<decimal?>("EnergyMwh")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("ENERGY_MWH");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("gid");

                    b.Property<DateTime?>("InsertionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("INSERTION_TIME");

                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CUSTOMERS");

                    b.Property<decimal?>("PeakPower")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("PEAK_POWER");

                    b.Property<decimal?>("ReactivePower")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("REACTIVE_POWER");

                    b.Property<decimal?>("RwoCode")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("rwo_code");

                    b.Property<int?>("RwoGid")
                        .HasColumnType("int")
                        .HasColumnName("rwo_gid");

                    b.HasKey("Id");

                    b.ToTable("SYS_LOAD_INFORMATION_evw", (string)null);
                });

            modelBuilder.Entity("LoadUpdatingTool.Data.Entity.TeeLoadInformationEvw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CurveNumber")
                        .HasColumnType("int")
                        .HasColumnName("CURVE_NUMBER");

                    b.Property<decimal?>("EnergyMwh")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("ENERGY_MWH");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("gid");

                    b.Property<DateTime?>("InsertionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("INSERTION_TIME");

                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CUSTOMERS");

                    b.Property<decimal?>("PeakPower")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("PEAK_POWER");

                    b.Property<decimal?>("PowerFactor")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("POWER_FACTOR");

                    b.Property<decimal?>("ReactivePower")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("REACTIVE_POWER");

                    b.Property<decimal?>("RwoCode")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("rwo_code");

                    b.Property<int?>("RwoGid")
                        .HasColumnType("int")
                        .HasColumnName("rwo_gid");

                    b.HasKey("Id");

                    b.ToTable("TEE_LOAD_INFORMATION_evw", (string)null);
                });

            modelBuilder.Entity("LoadUpdatingTool.Data.Entity.TeeServicePointEvw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConversionInfo")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasColumnName("CONVERSION_INFO");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("gid");

                    b.Property<string>("Identification")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("IDENTIFICATION");

                    b.HasKey("Id");

                    b.ToTable("TEE_SERVICE_POINT_evw", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
